name: Build

# on:
#   push:
#   pull_request:
#   release:
#     types: [published]

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    container: debian:bookworm
    outputs:
      version: ${{ steps.ver_exp.outputs.VERSION }}
    steps:
      # Install git.
    - name: Git
      run: |
        apt-get update
        apt-get install -y git

      # check out git repository.
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

      # Do the build.
    - name: Build
      run: |
        Build/run_this_inside_debian_container_to_build.bsh
    # set the version for flatpak
    - name: Version Export
      id: ver_exp
      run: |
        source Build/build_vars.sh
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Upload built files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: Build/Builds/Dist/
    
  flatpak:
    needs: build
    runs-on: ubuntu-latest
    steps:
        # Create the release, I guess?
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Auto generated release
          draft: true
          prerelease: false
      
      # check out git repository.
      - name: Checkout repository
        uses: actions/checkout@v4

       # download build artifacts from build
      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: Build/Builds/Dist/
      - name: set VERSION
        run: echo "VERSION=${{ needs.build.outputs.version}}" >> $GITHUB_ENV
      - name: Build
        run: |
            Build/run_this_inside_ubuntu_after_build.bsh
          
    
      - name: Upload Assets to Release with a wildcard
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          asset_path: "Build/Builds/Dist/SnekStudio_*"
          upload_url: ${{ steps.create_release.outputs.upload_url }}